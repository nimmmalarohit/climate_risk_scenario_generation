[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "climate-risk-scenario-generation"
version = "1.0.0"
description = "LLM-powered climate risk scenario generation for financial institutions"
readme = "README.md"
authors = [
    {name = "Rohit Nimmala", email = "r.rohit.nimmala@ieee.org"}
]
maintainers = [
    {name = "Rohit Nimmala", email = "r.rohit.nimmala@ieee.org"}
]
keywords = [
    "climate risk",
    "scenario generation", 
    "financial risk",
    "LLM",
    "machine learning",
    "policy analysis",
    "cascade modeling",
    "feedback loops"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Office/Business :: Financial :: Investment",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.900",
    "pre-commit>=2.0"
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15"
]
viz = [
    "plotly>=5.0",
    "dash>=2.0",
    "jupyter>=1.0"
]

[project.urls]
Homepage = "https://github.com/nimmmalarohit/climate_risk_scenario_generation"
Repository = "https://github.com/nimmmalarohit/climate_risk_scenario_generation"
"Bug Tracker" = "https://github.com/nimmmalarohit/climate_risk_scenario_generation/issues"

[project.scripts]
climate-risk-cli = "climate_risk_scenario_generation.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
climate_risk_scenario_generation = ["config/*.yaml", "data/*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/climate_risk_scenario_generation",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]